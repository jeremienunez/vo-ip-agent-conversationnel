[workspace]
members = [
    # Active crates
    "crates/common",        # Shared types, proto definitions, utilities
    "crates/core",          # Core configuration utilities
    "crates/api",           # HTTP API service
    "crates/media",         # Media Relay
    "crates/signalling",    # SIP Signaling
]
resolver = "2"

[workspace.package]
edition = "2021"
license = "MIT"
rust-version = "1.90"
authors = ["VoIP Team"]
repository = "https://github.com/voip/server"
keywords = ["voip", "sip", "rtp", "webrtc", "telephony"]

[workspace.dependencies]
# Async Runtime
tokio = { version = "1.41", features = ["full"] }
tokio-stream = "0.1"
tokio-util = { version = "0.7", features = ["codec", "net"] }

# Web Frameworks
axum = { version = "0.7", features = ["macros", "ws", "multipart"] }
tower = { version = "0.5", features = ["full"] }
tower-http = { version = "0.6", features = ["full"] }
hyper = { version = "1.7", features = ["full"] }

# gRPC & Protobuf
tonic = { version = "0.12", features = ["tls", "gzip", "zstd"] }
prost = "0.13"
tonic-build = "0.12"
tonic-health = "0.12"
tonic-reflection = "0.12"

# Message Queue
async-nats = "0.38"
nats = "0.25"

# Database
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "migrate"] }
sea-orm = { version = "1.1", features = ["sqlx-postgres", "runtime-tokio-rustls"] }
redis = { version = "0.27", features = ["tokio-comp", "connection-manager", "streams"] }

# Service Discovery
consul = "0.6"
etcd-rs = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
bincode = "1.3"
bytes = "1.8"

# Configuration
config = { version = "0.14", features = ["toml", "yaml", "json"] }
envy = "0.4"
dotenvy = "0.15"

# Observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json", "time"] }
tracing-opentelemetry = "0.27"
opentelemetry = { version = "0.27", features = ["trace", "metrics"] }
opentelemetry-otlp = { version = "0.27", features = ["tonic", "metrics", "trace"] }
opentelemetry_sdk = { version = "0.27", features = ["rt-tokio"] }
prometheus = "0.13"
metrics = "0.24"
metrics-exporter-prometheus = "0.16"

# Error Handling
anyhow = "1.0"
thiserror = "1.0"
color-eyre = "0.6"

# Security
jsonwebtoken = "9.3"
argon2 = "0.5"
ring = "0.17"
rustls = "0.23"
rustls-pemfile = "2.2"

# HTTP Client
reqwest = { version = "0.12", features = ["json", "rustls-tls", "stream"] }

# Utilities
uuid = { version = "1.11", features = ["serde", "v4", "v7"] }
chrono = { version = "0.4", features = ["serde"] }
regex = "1.11"
once_cell = "1.21"
parking_lot = "0.12"
dashmap = "6.1"
async-trait = "0.1"
futures = "0.3"
pin-project = "1.1"
rand = "0.8"

# Testing
mockall = "0.13"
wiremock = "0.6"
proptest = "1.6"
quickcheck = "1.0"
test-case = "3.3"
rstest = "0.24"
tempfile = "3.14"

# SIP/RTP specific (to be added)
# rvoip = "0.1"  # When available
# webrtc = "0.12"
# gstreamer = "0.24"

[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"
unused_imports = "warn"
unused_variables = "warn"
dead_code = "warn"

[workspace.lints.clippy]
all = "warn"
pedantic = "warn"
nursery = "warn"
cargo = "warn"
unwrap_used = "warn"
expect_used = "warn"
panic = "warn"
todo = "warn"
unimplemented = "warn"

[profile.dev]
opt-level = 0
debug = true
incremental = true

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true
panic = "abort"

[profile.bench]
inherits = "release"
debug = true

# Memory optimization profile
[profile.memory]
inherits = "release"
opt-level = "z"     # Optimize for size
lto = "fat"         # Maximum LTO
codegen-units = 1   # Single codegen unit
strip = true        # Strip symbols
panic = "abort"     # No unwinding